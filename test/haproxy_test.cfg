defaults
    option httplog
    mode http
    log stdout format raw local0
    timeout client 30s
    timeout connect 4s
    timeout server 30s

global
    lua-load /tmp/haproxy_geoip_lookup.lua
    stats socket /tmp/haproxy_test.sock

frontend test
    bind :6969

    # test IPs
    http-request set-src hdr(TEST-SRC)
    http-request capture src,ipmask(24,48) len 20

    # skip lookup for non-global ips (could be extended to bogons)
    acl private_nets src 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 127.0.0.0/8 ::1

    # COUNTRY
    http-request set-var(txn.geoip_country) str(00) if private_nets
    ## lookup from memory
    acl geoip_country_in_map src,ipmask(24,48),map_ip(/tmp/haproxy_geoip_country.map) -m found
    http-request set-var(txn.geoip_country) src,ipmask(24,48),map(/tmp/haproxy_geoip_country.map) if !private_nets geoip_country_in_map
    ## lookup from database
    http-request lua.lookup_geoip_country if !{ var(txn.geoip_country) -m found }
    ## log it
    http-request capture var(txn.geoip_country) len 2
    ## write to map
    http-request set-map(/tmp/haproxy_geoip_country.map) %[src,ipmask(24,48)] %[var(txn.geoip_country)] if !private_nets !geoip_country_in_map

    # CONTINENT
    http-request set-var(txn.geoip_continent) str(00) if private_nets
    ## lookup from memory
    acl geoip_continent_in_map src,ipmask(24,48),map_ip(/tmp/haproxy_geoip_continent.map) -m found
    http-request set-var(txn.geoip_continent) src,ipmask(24,48),map(/tmp/haproxy_geoip_continent.map) if !private_nets geoip_continent_in_map
    ## lookup from database
    http-request lua.lookup_geoip_continent if !{ var(txn.geoip_continent) -m found }
    ## log it
    http-request capture var(txn.geoip_continent) len 2
    ## write to map
    http-request set-map(/tmp/haproxy_geoip_continent.map) %[src,ipmask(24,48)] %[var(txn.geoip_continent)] if !private_nets !geoip_continent_in_map

    # ASN
    http-request set-var(txn.geoip_asn) str(00) if private_nets
    ## lookup from memory
    acl geoip_asn_in_map src,ipmask(24,48),map_ip(/tmp/haproxy_geoip_asn.map) -m found
    http-request set-var(txn.geoip_asn) src,ipmask(24,48),map(/tmp/haproxy_geoip_asn.map) if !private_nets geoip_asn_in_map
    ## lookup from database
    http-request lua.lookup_geoip_asn if !{ var(txn.geoip_asn) -m found }
    ## log it
    http-request capture var(txn.geoip_asn) len 6
    ## write to map
    http-request set-map(/tmp/haproxy_geoip_asn.map) %[src,ipmask(24,48)] %[var(txn.geoip_asn)] if !private_nets !geoip_asn_in_map

    # ASN-NAME
    http-request set-var(txn.geoip_asname) str(00) if private_nets
    ## lookup from memory
    acl geoip_asname_in_map src,ipmask(24,48),map_ip(/tmp/haproxy_geoip_asname.map) -m found
    http-request set-var(txn.geoip_asname) src,ipmask(24,48),map(/tmp/haproxy_geoip_asname.map) if !private_nets geoip_asname_in_map
    ## lookup from database
    http-request lua.lookup_geoip_asname if !{ var(txn.geoip_asname) -m found }
    ## log it
    http-request capture var(txn.geoip_asname) len 50
    ## write to map
    http-request set-map(/tmp/haproxy_geoip_asname.map) %[src,ipmask(24,48)] %[var(txn.geoip_asname)] if !private_nets !geoip_asname_in_map

    # generic response
    http-request deny status 200
